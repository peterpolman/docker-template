/*doc
---
title: Popover
name: popover
category: 03_molecules
---

For displaying HTML in a popover component set the `data-html` attribute to `true`.

Use `data-placement` with values: `top`, `left`, `right`, `bottom` for forcing the placement of the popover.

Setting a `title` value is optional.

Make sure that you use single quotes within the `data-content` attribute or else the render method will break

```html_example
<button data-toggle="popover" data-trigger="click" data-placement="top" data-html="true" title="" data-content="<p>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Duis euismod nisl arcu, eget malesuada orci cursus eleifend. Mauris et maximus enim, eu interdum libero.</p><img style='width: 200px; height: auto' src='/assets/images/idcard.png' alt='ID Card' />">
  <svg role="img" class="icon text-blue">
    <use xlink:href="#info"></use>
  </svg>
  <svg role="img" class="icon text-blue hidden">
    <use xlink:href="#close"></use>
  </svg>
</button>
```

```html_example
<button class="btn btn-s btn-info" data-trigger="hover" data-toggle="popover" data-placement="top" data-html="true" title="Optional popover title" data-content="Oeh lala, look at me! <strong>I can hold some HTML if my data-html attribute is set to true!</strong>">
  Show top popover on hover
</button>
```

```html_example
<button class="btn btn-s btn-info" data-trigger="click" data-toggle="popover" data-placement="right" data-html="true" title="" data-content="Oeh lala, look at me! <strong>I can hold some HTML if my data-html attribute is set to true!</strong>">
  Show right popover with no title on click
</button>
```
*/

[data-toggle="popover"]:not(.btn) {
  background: transparent;
  -webkit-appearance: none;
  border: 0;
  padding: 0;
  position: relative;
  display: inline-block;

  .icon {
    transition: .2s fill ease;
  }

  &:focus,
  &:active {
    outline: 0;
  }

  &[data-trigger="click"]:hover,
  &[data-trigger="click hover"]:hover {
    cursor: pointer;
  }

  &.popover-clicked,
  &:hover {
    text-decoration: none;

    .icon {
      fill: darken($blue, 10%)
    }
  }

}


.popover {
  position: absolute;
  top: 0;
  left: 0;
  z-index: $zindex-popover;
  display: none;
  max-width: $popover-max-width;
  font-size: $font-size-base;

  background-color: $popover-bg;
  background-clip: padding-box;
  border: 1px solid $popover-fallback-border-color;
  border: 1px solid $popover-border-color;
  border-radius: $border-radius-small;
  box-shadow: 0 2px 5px rgba(0,0,0,.2);

  // Offset the popover to account for the popover arrow
  &.top     { margin-top: -1rem; }
  &.right   { margin-left: 1rem; }
  &.bottom  { margin-top: 1rem; }
  &.left    { margin-left: -1rem; }
}

.popover-title {
  margin: 0; // reset heading margin
  padding: 8px 14px;
  font-size: $font-size-base;
  background-color: $popover-title-bg;
  border-bottom: 1px solid darken($popover-title-bg, 5%);
  border-radius: ($border-radius-small - 1) ($border-radius-small - 1) 0 0;
}

.popover-content {
  padding: 9px 14px;
}

// Arrows
//
// .arrow is outer, .arrow:after is inner

.popover > .arrow {
  &,
  &:after {
    position: absolute;
    display: block;
    width: 0;
    height: 0;
    border-color: transparent;
    border-style: solid;
  }
}
.popover > .arrow {
  border-width: $popover-arrow-outer-width;
}
.popover > .arrow:after {
  border-width: $popover-arrow-width;
  content: "";
}

.popover {
  &.top > .arrow {
    left: 50%;
    margin-left: -$popover-arrow-outer-width;
    border-bottom-width: 0;
    border-top-color: $popover-arrow-outer-fallback-color; // IE8 fallback
    border-top-color: $popover-arrow-outer-color;
    bottom: -$popover-arrow-outer-width;
    &:after {
      content: " ";
      bottom: 1px;
      margin-left: -$popover-arrow-width;
      border-bottom-width: 0;
      border-top-color: $popover-arrow-color;
    }
  }
  &.right > .arrow {
    top: 50%;
    left: -$popover-arrow-outer-width;
    margin-top: -$popover-arrow-outer-width;
    border-left-width: 0;
    border-right-color: $popover-arrow-outer-fallback-color; // IE8 fallback
    border-right-color: $popover-arrow-outer-color;
    &:after {
      content: " ";
      left: 1px;
      bottom: -$popover-arrow-width;
      border-left-width: 0;
      border-right-color: $popover-arrow-color;
    }
  }
  &.bottom > .arrow {
    left: 50%;
    margin-left: -$popover-arrow-outer-width;
    border-top-width: 0;
    border-bottom-color: $popover-arrow-outer-fallback-color; // IE8 fallback
    border-bottom-color: $popover-arrow-outer-color;
    top: -$popover-arrow-outer-width;
    &:after {
      content: " ";
      top: 1px;
      margin-left: -$popover-arrow-width;
      border-top-width: 0;
      border-bottom-color: $popover-arrow-color;
    }
  }

  &.left > .arrow {
    top: 50%;
    right: -$popover-arrow-outer-width;
    margin-top: -$popover-arrow-outer-width;
    border-right-width: 0;
    border-left-color: $popover-arrow-outer-fallback-color; // IE8 fallback
    border-left-color: $popover-arrow-outer-color;
    &:after {
      content: " ";
      right: 1px;
      border-right-width: 0;
      border-left-color: $popover-arrow-color;
      bottom: -$popover-arrow-width;
    }
  }
}
